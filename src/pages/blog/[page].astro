---
import { getAllPosts } from "../../lib/cosmic";

import TwitterCardImage from "../../images/twitter-card.png";
import Layout from "../../components/layout/Layout.astro";
import PostDate from "../../components/blog/PostDate.astro";
import type { GetStaticPaths, Page } from "astro";
import type { Post } from "../../lib/content.type";

type Props = {
  page: Page<Post>;
};

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const posts = await getAllPosts();
  posts.sort((a, b) => b.publishedAt.getTime() - a.publishedAt.getTime());
  return paginate(posts, { pageSize: 12 });
}

const { page } = Astro.props;
---

<Layout
  title="Le blog"
  description="Blog"
  image={`https://www.carte-du-patrimoine.com${TwitterCardImage.src}`}
>
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="pb-8 pt-6">
      <h1 class="text-3xl font-extrabold leading-9 tracking-tight text-text-darker sm:leading-10 md:leading-14">
        Le blog de Carte du Patrimoine
      </h1>

      <p class="mt-6 text-lg leading-7 text-text-darker">
        Bienvenue sur le blog de Carte du Patrimoine, votre guide pratique pour
        découvrir les Monuments Historiques français.
      </p>

      <div class="mt-10 grid gap-10 md:grid-cols-2 lg:gap-10 xl:grid-cols-3">
        {
          page.data.map((post, index) => (
            <div class="group cursor-pointer">
              <div class="overflow-hidden rounded-md bg-surface-dark transition-all hover:scale-105">
                <a href={`/blog/${post.slug}`}>
                  <img
                    src={`${post.image}?h=300&ar=16:9&fit=crop`}
                    alt={post.title}
                    class="object-cover transition-all h-full w-full transparent aspect-[16/9]"
                    loading={index <= 2 ? "eager" : "lazy"}
                  />
                </a>
              </div>
              <div>
                <h2
                  class="text-lg normal line-clamp-2 font-medium tracking-normal text-black mt-2"
                  transition:name={`post-title-${post.slug}`}
                >
                  <a href={`/blog/${post.slug}`}>
                    <span class="bg-gradient-to-r from-primary-light to-primary-light bg-[length:0px_10px] bg-left-bottom bg-no-repeat transition-[background-size] duration-500 hover:bg-[length:100%_3px] group-hover:bg-[length:100%_10px]">
                      {post.title}
                    </span>
                  </a>
                </h2>
                <div
                  class="mt-2 flex items-center space-x-3 text-text-dark"
                  transition:name={`post-date-${post.slug}`}
                >
                  <PostDate className="truncate text-sm" post={post} />
                </div>
              </div>
            </div>
          ))
        }
      </div>

      <div class="mt-10 flex items-center justify-center">
        <nav
          class="isolate inline-flex items-center space-x-8"
          aria-label="Pagination"
        >
          {
            page.url.prev && (
              <a
                href={page.url.prev}
                class="relative inline-flex items-center gap-1 rounded border border-surface-dark bg-surface-lighter px-3 py-2 pr-4 text-sm font-medium text-text-dark hover:text-primary duration-250 transition-colors"
              >
                <span>← Précédent</span>
              </a>
            )
          }

          <span class="text-text-darker">Page {page.currentPage} / {page.lastPage}</span>

          {
            page.url.next && (
              <a
                href={page.url.next}
                class="relative inline-flex items-center gap-1 rounded border border-surface-dark bg-surface-lighter px-3 py-2 pr-4 text-sm font-medium text-text-dark hover:text-primary duration-250 transition-colors"
              >
                <span>Suivant →</span>
              </a>
            )
          }
        </nav>
      </div>
    </div>
  </div>
</Layout>
